name: OpenTofu Pull Request

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - synchronize
    paths:
      - "**/**.tf"
      - "**.hcl"

jobs:
  tofu:
    name: "Validate & Plan OpenTofu Changes"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      PLAN_OUTFILE: "${{ github.workspace }}/tofu-plan-${{ github.head_ref }}-${{ github.run_id }}"
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
    steps:
      # Setup repo & cache
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: cache-tflint-${{ hashFiles('.tflint.hcl') }}-
      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.terraform/providers
          key: cache-tofu-${{ hashFiles('.terraform.lock.hcl') }}-

      # Install required tools
      - uses: opentofu/setup-opentofu@v1
      - uses: terraform-linters/setup-tflint@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: 1password/install-cli-action@v1

      # Run CI steps
      - id: fmt
        run: just tofu fmt -check -recursive -no-color
      - id: init
        run: just tofu init -no-color -lockfile=readonly
      - run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: validate
        run: just tofu validate -no-color
      - id: lint
        run: just tflint
      - id: plan
        run: just tofu plan -no-color -out=${{ env.PLAN_OUTFILE }}

      # Leave comment on PR
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { makePrComment } = await import('${{ github.workspace }}/scripts/tofu.mjs');
            await makePrComment({
              fmt:      { outcome: String.raw`${{ steps.fmt.outcome }}` },  
              init:     { outcome: String.raw`${{ steps.init.outcome }}` },
              validate: {
                outcome:  String.raw`${{ steps.validate.outcome }}`,
                stdout:   String.raw`${{ steps.validate.outputs.stdout }}`,
              },
              lint:     { outcome:  String.raw`${{ steps.lint.outcome }}` },
              plan:     {
                outcome:  String.raw`${{ steps.plan.outcome }}`,
                stdout:   String.raw`${{ steps.plan.outputs.stdout }}`
              }
            }, { github, context, core, glob, io, exec, require });

      # Upload plan for later application
      - uses: actions/upload-artifact@v4
        with:
          name: tofu-plan
          path: ${{ env.PLAN_OUTFILE }}
          if-no-files-found: warn
          overwrite: true
