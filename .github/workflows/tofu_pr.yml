name: Tofu Pull Request

on:
  pull_request:
    branches: ["main"]
    types: [opened, synchronize]
    paths:
      - "**/**.tf"
      - "terraform.lock.hcl"
jobs:
  tofu:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - uses: 1password/install-cli-action@v1
      - name: OpenTofu fmt
        id: fmt
        run: just tofu fmt -check -recursive -no-color
        continue-on-error: true

      - name: OpenTofu Init
        id: init
        run: just tofu init

      - name: OpenTofu Validate
        id: validate
        run: just tofu validate -no-color

      - name: OpenTofu Plan
        id: plan
        run: just tofu plan -no-color
        continue-on-error: true

      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { makePrComment } = await import('${{ github.workspace }}/scripts/tofu-pr-comment.mjs');
            await makePrComment({
              fmt:      { outcome: String.raw`${{ steps.fmt.outcome }}` },  
              init:     { outcome: String.raw`${{ steps.init.outcome }}` },
              validate: {
                outcome:  String.raw`${{ steps.validate.outcome }}`,
                stdout:   String.raw`${{ steps.validate.outputs.stdout }}`,
              },
              plan:     {
                outcome:  String.raw`${{ steps.plan.outcome }}`,
                stdout:   String.raw`${{ steps.plan.outputs.stdout }}`
              }
            }, { github, context, core, glob, io, exec, require });
